version: '3.8'

services:

  cut-roll-news:
    image: cut-roll-news
    build:
      context: .
      dockerfile: app.Dockerfile
    container_name: news_container
    environment:
      ASPNETCORE_URLS: http://+:80 
      POSTGRES_CONNECTION_STRING: "Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB};Pooling=true;"
      BLOB_STORAGE_CONNECTION_STRING: "DefaultEndpointsProtocol=${AZURE_BLOB_DEFAULT_PROTOCOL};AccountName=${AZURE_BLOB_ACCOUNT_NAME};AccountKey=${AZURE_BLOB_ACCOUNT_KEY};EndpointSuffix=${AZURE_BLOB_ENDPOINT_SUFFIX}"

      JWT_KEY: "${JWT_KEY}"
      JWT_LIFE_TIME_IN_MINUTES: "${JWT_LIFE_TIME_IN_MINUTES}"
      JWT_ISSUER: "${JWT_ISSUER}"
      JWT_AUDIENCE: "${JWT_AUDIENCE}"
      RABBIT_MQ_HOSTNAME: "${RABBIT_MQ_HOSTNAME}"
      RABBIT_MQ_USERNAME: "${RABBIT_MQ_USERNAME}"
      RABBIT_MQ_PASSWORD: "${RABBIT_MQ_PASSWORD}"
      DEFAULT_ADMIN_USERNAME: "${DEFAULT_ADMIN_USERNAME}"
      DEFAULT_ADMIN_EMAIL: "${DEFAULT_ADMIN_EMAIL}"
      DEFAULT_ADMIN_PASSWORD: "${DEFAULT_ADMIN_PASSWORD}"
      EMAIL_PORT: "${EMAIL_PORT}"
      EMAIL_SERVER: "${EMAIL_SERVER}"
      EMAIL_USER: "${EMAIL_USER}"
      EMAIL_EMAIL: "${EMAIL_EMAIL}"
      EMAIL_NAME: "${EMAIL_NAME}"
      EMAIL_PASSWORD: "${EMAIL_PASSWORD}"
      

    ports:
      - 5000:80
    depends_on:
      - postgres
    networks:
      - news-network
    restart: always

  
  postgres:
    image: postgres:latest
    container_name: news_db_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"  
    networks:
      - news-network
    volumes:
      - news_db_volume:/var/lib/postgresql/data
    restart: always

volumes:
  news_db_volume:

networks:
  news-network:
    driver: bridge

